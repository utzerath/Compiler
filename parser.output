State 32 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList StmtList

    2 VarDeclList: /* empty */
    3            | VarDecl VarDeclList

    4 VarDecl: TYPE ID SEMICOLON
    5        | TYPE ID

    6 StmtList: /* empty */
    7         | Stmt StmtList

    8 Stmt: ID EQ Expr SEMICOLON
    9     | WRITE Expr SEMICOLON
   10     | OPEN_BRACE StmtList CLOSE_BRACE

   11 Expr: Expr BinOp Expr
   12     | NUMBER
   13     | FLOAT_LITERAL
   14     | ID
   15     | OPEN_PAREN Expr CLOSE_PAREN

   16 BinOp: PLUS
   17      | MINUS
   18      | MULTIPLY
   19      | DIVIDE


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 4 5
NUMBER (259) 12
FLOAT_LITERAL (260) 13
SEMICOLON (261) 4 8 9
EQ (262) 8
PLUS (263) 16
MINUS (264) 17
MULTIPLY (265) 18
DIVIDE (266) 19
WRITE (267) 9
OPEN_BRACE (268) 10
CLOSE_BRACE (269) 10
OPEN_PAREN (270) 15
CLOSE_PAREN (271) 15
ID (272) 4 5 8 14


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
Program (19)
    on left: 1, on right: 0
VarDeclList (20)
    on left: 2 3, on right: 1 3
VarDecl (21)
    on left: 4 5, on right: 3
StmtList (22)
    on left: 6 7, on right: 1 7 10
Stmt (23)
    on left: 8 9 10, on right: 7
Expr (24)
    on left: 11 12 13 14 15, on right: 8 9 11 15
BinOp (25)
    on left: 16 17 18 19, on right: 11


state 0

    0 $accept: . Program $end

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (VarDeclList)

    Program      go to state 2
    VarDeclList  go to state 3
    VarDecl      go to state 4


state 1

    4 VarDecl: TYPE . ID SEMICOLON
    5        | TYPE . ID

    ID  shift, and go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    1 Program: VarDeclList . StmtList

    WRITE       shift, and go to state 7
    OPEN_BRACE  shift, and go to state 8
    ID          shift, and go to state 9

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 10
    Stmt      go to state 11


state 4

    3 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (VarDeclList)

    VarDeclList  go to state 12
    VarDecl      go to state 4


state 5

    4 VarDecl: TYPE ID . SEMICOLON
    5        | TYPE ID .

    SEMICOLON  shift, and go to state 13

    $default  reduce using rule 5 (VarDecl)


state 6

    0 $accept: Program $end .

    $default  accept


state 7

    9 Stmt: WRITE . Expr SEMICOLON

    NUMBER         shift, and go to state 14
    FLOAT_LITERAL  shift, and go to state 15
    OPEN_PAREN     shift, and go to state 16
    ID             shift, and go to state 17

    Expr  go to state 18


state 8

   10 Stmt: OPEN_BRACE . StmtList CLOSE_BRACE

    WRITE       shift, and go to state 7
    OPEN_BRACE  shift, and go to state 8
    ID          shift, and go to state 9

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 19
    Stmt      go to state 11


state 9

    8 Stmt: ID . EQ Expr SEMICOLON

    EQ  shift, and go to state 20


state 10

    1 Program: VarDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 11

    7 StmtList: Stmt . StmtList

    WRITE       shift, and go to state 7
    OPEN_BRACE  shift, and go to state 8
    ID          shift, and go to state 9

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 21
    Stmt      go to state 11


state 12

    3 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 3 (VarDeclList)


state 13

    4 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 4 (VarDecl)


state 14

   12 Expr: NUMBER .

    $default  reduce using rule 12 (Expr)


state 15

   13 Expr: FLOAT_LITERAL .

    $default  reduce using rule 13 (Expr)


state 16

   15 Expr: OPEN_PAREN . Expr CLOSE_PAREN

    NUMBER         shift, and go to state 14
    FLOAT_LITERAL  shift, and go to state 15
    OPEN_PAREN     shift, and go to state 16
    ID             shift, and go to state 17

    Expr  go to state 22


state 17

   14 Expr: ID .

    $default  reduce using rule 14 (Expr)


state 18

    9 Stmt: WRITE Expr . SEMICOLON
   11 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 23
    PLUS       shift, and go to state 24
    MINUS      shift, and go to state 25
    MULTIPLY   shift, and go to state 26
    DIVIDE     shift, and go to state 27

    BinOp  go to state 28


state 19

   10 Stmt: OPEN_BRACE StmtList . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 29


state 20

    8 Stmt: ID EQ . Expr SEMICOLON

    NUMBER         shift, and go to state 14
    FLOAT_LITERAL  shift, and go to state 15
    OPEN_PAREN     shift, and go to state 16
    ID             shift, and go to state 17

    Expr  go to state 30


state 21

    7 StmtList: Stmt StmtList .

    $default  reduce using rule 7 (StmtList)


state 22

   11 Expr: Expr . BinOp Expr
   15     | OPEN_PAREN Expr . CLOSE_PAREN

    PLUS         shift, and go to state 24
    MINUS        shift, and go to state 25
    MULTIPLY     shift, and go to state 26
    DIVIDE       shift, and go to state 27
    CLOSE_PAREN  shift, and go to state 31

    BinOp  go to state 28


state 23

    9 Stmt: WRITE Expr SEMICOLON .

    $default  reduce using rule 9 (Stmt)


state 24

   16 BinOp: PLUS .

    $default  reduce using rule 16 (BinOp)


state 25

   17 BinOp: MINUS .

    $default  reduce using rule 17 (BinOp)


state 26

   18 BinOp: MULTIPLY .

    $default  reduce using rule 18 (BinOp)


state 27

   19 BinOp: DIVIDE .

    $default  reduce using rule 19 (BinOp)


state 28

   11 Expr: Expr BinOp . Expr

    NUMBER         shift, and go to state 14
    FLOAT_LITERAL  shift, and go to state 15
    OPEN_PAREN     shift, and go to state 16
    ID             shift, and go to state 17

    Expr  go to state 32


state 29

   10 Stmt: OPEN_BRACE StmtList CLOSE_BRACE .

    $default  reduce using rule 10 (Stmt)


state 30

    8 Stmt: ID EQ Expr . SEMICOLON
   11 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 33
    PLUS       shift, and go to state 24
    MINUS      shift, and go to state 25
    MULTIPLY   shift, and go to state 26
    DIVIDE     shift, and go to state 27

    BinOp  go to state 28


state 31

   15 Expr: OPEN_PAREN Expr CLOSE_PAREN .

    $default  reduce using rule 15 (Expr)


state 32

   11 Expr: Expr . BinOp Expr
   11     | Expr BinOp Expr .

    PLUS      shift, and go to state 24
    MINUS     shift, and go to state 25
    MULTIPLY  shift, and go to state 26
    DIVIDE    shift, and go to state 27

    PLUS      [reduce using rule 11 (Expr)]
    MINUS     [reduce using rule 11 (Expr)]
    MULTIPLY  [reduce using rule 11 (Expr)]
    DIVIDE    [reduce using rule 11 (Expr)]
    $default  reduce using rule 11 (Expr)

    BinOp  go to state 28


state 33

    8 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 8 (Stmt)
