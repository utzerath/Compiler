State 28 conflicts: 3 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList StmtList

    2 VarDeclList: /* empty */
    3            | VarDecl VarDeclList

    4 VarDecl: TYPE ID SEMICOLON
    5        | TYPE ID

    6 StmtList: /* empty */
    7         | Stmt StmtList

    8 Stmt: ID EQ Expr SEMICOLON
    9     | WRITE ID SEMICOLON
   10     | OPEN_BRACE StmtList CLOSE_BRACE

   11 Expr: Expr BinOp Expr
   12     | ID
   13     | NUMBER

   14 BinOp: PLUS
   15      | MULTIPLY
   16      | DIVIDE


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 4 5
ID (259) 4 5 8 9 12
SEMICOLON (260) 4 8 9
EQ (261) 8
PLUS (262) 14
MULTIPLY (263) 15
DIVIDE (264) 16
NUMBER (265) 13
WRITE (266) 9
OPEN_BRACE (267) 10
CLOSE_BRACE (268) 10


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
Program (15)
    on left: 1, on right: 0
VarDeclList (16)
    on left: 2 3, on right: 1 3
VarDecl (17)
    on left: 4 5, on right: 3
StmtList (18)
    on left: 6 7, on right: 1 7 10
Stmt (19)
    on left: 8 9 10, on right: 7
Expr (20)
    on left: 11 12 13, on right: 8 11
BinOp (21)
    on left: 14 15 16, on right: 11


state 0

    0 $accept: . Program $end

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (VarDeclList)

    Program      go to state 2
    VarDeclList  go to state 3
    VarDecl      go to state 4


state 1

    4 VarDecl: TYPE . ID SEMICOLON
    5        | TYPE . ID

    ID  shift, and go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    1 Program: VarDeclList . StmtList

    ID          shift, and go to state 7
    WRITE       shift, and go to state 8
    OPEN_BRACE  shift, and go to state 9

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 10
    Stmt      go to state 11


state 4

    3 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (VarDeclList)

    VarDeclList  go to state 12
    VarDecl      go to state 4


state 5

    4 VarDecl: TYPE ID . SEMICOLON
    5        | TYPE ID .

    SEMICOLON  shift, and go to state 13

    $default  reduce using rule 5 (VarDecl)


state 6

    0 $accept: Program $end .

    $default  accept


state 7

    8 Stmt: ID . EQ Expr SEMICOLON

    EQ  shift, and go to state 14


state 8

    9 Stmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 15


state 9

   10 Stmt: OPEN_BRACE . StmtList CLOSE_BRACE

    ID          shift, and go to state 7
    WRITE       shift, and go to state 8
    OPEN_BRACE  shift, and go to state 9

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 16
    Stmt      go to state 11


state 10

    1 Program: VarDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 11

    7 StmtList: Stmt . StmtList

    ID          shift, and go to state 7
    WRITE       shift, and go to state 8
    OPEN_BRACE  shift, and go to state 9

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 17
    Stmt      go to state 11


state 12

    3 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 3 (VarDeclList)


state 13

    4 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 4 (VarDecl)


state 14

    8 Stmt: ID EQ . Expr SEMICOLON

    ID      shift, and go to state 18
    NUMBER  shift, and go to state 19

    Expr  go to state 20


state 15

    9 Stmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 21


state 16

   10 Stmt: OPEN_BRACE StmtList . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 22


state 17

    7 StmtList: Stmt StmtList .

    $default  reduce using rule 7 (StmtList)


state 18

   12 Expr: ID .

    $default  reduce using rule 12 (Expr)


state 19

   13 Expr: NUMBER .

    $default  reduce using rule 13 (Expr)


state 20

    8 Stmt: ID EQ Expr . SEMICOLON
   11 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 23
    PLUS       shift, and go to state 24
    MULTIPLY   shift, and go to state 25
    DIVIDE     shift, and go to state 26

    BinOp  go to state 27


state 21

    9 Stmt: WRITE ID SEMICOLON .

    $default  reduce using rule 9 (Stmt)


state 22

   10 Stmt: OPEN_BRACE StmtList CLOSE_BRACE .

    $default  reduce using rule 10 (Stmt)


state 23

    8 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 8 (Stmt)


state 24

   14 BinOp: PLUS .

    $default  reduce using rule 14 (BinOp)


state 25

   15 BinOp: MULTIPLY .

    $default  reduce using rule 15 (BinOp)


state 26

   16 BinOp: DIVIDE .

    $default  reduce using rule 16 (BinOp)


state 27

   11 Expr: Expr BinOp . Expr

    ID      shift, and go to state 18
    NUMBER  shift, and go to state 19

    Expr  go to state 28


state 28

   11 Expr: Expr . BinOp Expr
   11     | Expr BinOp Expr .

    PLUS      shift, and go to state 24
    MULTIPLY  shift, and go to state 25
    DIVIDE    shift, and go to state 26

    PLUS      [reduce using rule 11 (Expr)]
    MULTIPLY  [reduce using rule 11 (Expr)]
    DIVIDE    [reduce using rule 11 (Expr)]
    $default  reduce using rule 11 (Expr)

    BinOp  go to state 27
